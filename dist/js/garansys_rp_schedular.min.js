class ResourceScheduler{constructor(t,e={}){try{if(this.container="string"==typeof t?document.querySelector(t):t,!this.container)throw new Error("Container element not found");this.options={cellWidth:80,rowHeight:50,daysToShow:21,startDate:new Date,useBuiltInModal:!0,cellClickAction:"single",infiniteScroll:!0,loadThreshold:7,bufferDays:14,maxDaysInMemory:84,chunkDays:21,...e},this.resources=[],this.tasks=[],this.currentTaskId=0,this.dragState=null,this.resizeState=null,this.selectedCell=null,this.selectedTask=null,this.editingTask=null,this.events={},this.loadedDateRange={start:null,end:null},this.isLoading=!1,this.hasReachedEnd=!1,this.currentStartDate=this.getMonday(this.options.startDate),this.options.infiniteScroll&&(this.loadedDateRange.start=new Date(this.currentStartDate),this.loadedDateRange.end=new Date(this.currentStartDate),this.loadedDateRange.end.setDate(this.loadedDateRange.end.getDate()+this.options.daysToShow-1)),this.handleMouseMove=this.handleMouseMove.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this),this.handleScroll=this.handleScroll.bind(this),this.init()}catch(t){throw console.error("Error initializing ResourceScheduler:",t),this.emit("error",{type:"initialization",error:t}),t}}validateTask(t){if(!t||"object"!=typeof t)throw new Error("Task must be an object");if(!t.title||"string"!=typeof t.title)throw new Error("Task must have a valid title");if(!t.start||!this.isValidDate(t.start))throw new Error("Task must have a valid start date (YYYY-MM-DD format)");if(t.duration&&(!Number.isInteger(t.duration)||t.duration<1))throw new Error("Task duration must be a positive integer");if(void 0!==t.resourceIndex&&(!Number.isInteger(t.resourceIndex)||t.resourceIndex<0))throw new Error("Task resourceIndex must be a non-negative integer")}isValidDate(t){if("string"!=typeof t)return!1;if(!/^\d{4}-\d{2}-\d{2}$/.test(t))return!1;const e=new Date(t+"T00:00:00");return!isNaN(e.getTime())}loadData(t,e){try{if(!Array.isArray(t))throw new Error("Resources must be an array");if(!Array.isArray(e))throw new Error("Tasks must be an array");e.forEach(((t,e)=>{try{this.validateTask(t)}catch(r){throw console.error(`Invalid task at index ${e}:`,r.message,t),new Error(`Task validation failed at index ${e}: ${r.message}`)}})),this.resources=t||[],this.tasks=e||[],this.currentTaskId=Math.max(0,...this.tasks.map((t=>t.id||0))),this.render()}catch(t){throw console.error("Error loading data:",t),this.emit("error",{type:"dataLoading",error:t}),t}}getData(){try{return{resources:[...this.resources],tasks:[...this.tasks]}}catch(t){return console.error("Error getting data:",t),this.emit("error",{type:"dataRetrieval",error:t}),{resources:[],tasks:[]}}}on(t,e){try{if("function"!=typeof e)throw new Error("Callback must be a function");return this.events[t]||(this.events[t]=[]),this.events[t].push(e),this}catch(t){return console.error("Error registering event handler:",t),this}}emit(t,e){try{this.events[t]&&this.events[t].forEach((r=>{try{r(e)}catch(e){console.error(`Error in event handler for ${t}:`,e)}}))}catch(t){console.error("Error emitting event:",t)}}init(){try{this.createHTML(),this.setupEventListeners()}catch(t){throw console.error("Error during initialization:",t),this.emit("error",{type:"initialization",error:t}),t}}createHTML(){try{this.container.innerHTML=`\n                <div class="grp-scheduler-container">\n                    <div class="grp-scheduler-header">\n                        <div class="grp-resource-header">Resources</div>\n                        <div class="grp-days-header-container">\n                            <div class="grp-days-header"></div>\n                        </div>\n                    </div>\n                    <div class="grp-scheduler-content">\n                        <div class="grp-resources-column"></div>\n                        <div class="grp-timeline-area">\n                            <div class="grp-timeline-grid"></div>\n                            ${this.options.infiniteScroll?'<div class="grp-loading-indicator" style="display: none;">Loading more dates...</div>':""}\n                        </div>\n                    </div>\n                </div>\n            `}catch(t){throw console.error("Error creating HTML:",t),this.emit("error",{type:"htmlCreation",error:t}),t}}setupEventListeners(){try{if(this.options.useBuiltInModal){const t=document.getElementById("taskModal");t&&t.remove();const e='\n                    <div id="taskModal" class="grp-modal">\n                        <div class="grp-modal-content">\n                            <div class="grp-modal-header">\n                                <span class="grp-close">&times;</span>\n                                <h2>Nieuwe Taak</h2>\n                            </div>\n                            <form id="taskForm">\n                                <div class="grp-modal-body">\n                                    <div class="grp-form-group">\n                                        <label for="taskTitle">Titel</label>\n                                        <input type="text" id="taskTitle" required>\n                                    </div>\n                                    <div class="grp-form-group">\n                                        <label for="taskStart">Start Datum</label>\n                                        <input type="date" id="taskStart" required>\n                                    </div>\n                                    <div class="grp-form-group">\n                                        <label for="taskDuration">Duur (dagen)</label>\n                                        <input type="number" id="taskDuration" min="1" value="1" required>\n                                    </div>\n                                    <div class="grp-form-group">\n                                        <label for="taskResource">Resource</label>\n                                        <select id="taskResource" required></select>\n                                    </div>\n                                    <div class="grp-form-group">\n                                        <label for="taskType">Type</label>\n                                        <select id="taskType">\n                                            <option value="project">Project</option>\n                                            <option value="meeting">Meeting</option>\n                                            <option value="vacation">Vakantie</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div class="grp-modal-footer">\n                                    <button type="button" class="grp-btn grp-btn-secondary" onclick="this.closest(\'.grp-modal\').style.display=\'none\'">Annuleren</button>\n                                    <button type="submit" class="grp-btn grp-btn-primary">Opslaan</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                ';document.body.insertAdjacentHTML("beforeend",e);const r=document.getElementById("taskModal"),s=r?r.querySelector(".grp-close"):null,a=document.getElementById("taskForm");s&&(s.onclick=()=>this.closeTaskModal()),r&&(window.onclick=t=>{t.target===r&&this.closeTaskModal()}),a&&(a.onsubmit=t=>this.saveTask(t))}document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp),document.addEventListener("keydown",this.handleKeyDown.bind(this)),this.syncScroll();const t=this.container.querySelector(".grp-timeline-area");console.log("üîß Adding scroll listener to timeline-area:",t),t&&(t.addEventListener("scroll",this.handleScroll,{passive:!0}),setTimeout((()=>{console.log("üìä Timeline-area scroll info:",{scrollWidth:t.scrollWidth,clientWidth:t.clientWidth,scrollHeight:t.scrollHeight,clientHeight:t.clientHeight,canScrollHorizontal:t.scrollWidth>t.clientWidth,canScrollVertical:t.scrollHeight>t.clientHeight})}),100))}catch(t){console.error("Error setting up event listeners:",t),this.emit("error",{type:"eventListeners",error:t})}}syncScroll(){try{const t=this.container.querySelector(".grp-days-header-container"),e=this.container.querySelector(".grp-timeline-area");if(console.log("üîó Setting up scroll sync between:",{daysHeaderContainer:t,timelineArea:e}),!t||!e)return void console.warn("Could not find elements for scroll sync:",{daysHeaderContainer:t,timelineArea:e});e.addEventListener("scroll",(()=>{t.scrollLeft=e.scrollLeft,console.log("üìú Syncing scroll:",e.scrollLeft)}))}catch(t){console.error("Error setting up scroll sync:",t),this.emit("error",{type:"scrollSync",error:t})}}render(){try{this.renderDaysHeader(),this.renderResources(),this.renderTimeline(),this.renderTasks()}catch(t){console.error("Error during render:",t),this.emit("error",{type:"render",error:t})}}renderDaysHeader(){try{const t=this.container.querySelector(".grp-days-header");if(!t)throw new Error("Days header element not found");t.innerHTML="";const e=new Date;e.setHours(0,0,0,0),console.log("üóìÔ∏è HEADER DEBUG - currentStartDate:",this.dateToYMD(this.currentStartDate));for(let r=0;r<this.options.daysToShow;r++){const s=new Date(this.currentStartDate.getTime()+24*r*60*60*1e3),a=document.createElement("div");a.className="grp-day-column",0!==s.getDay()&&6!==s.getDay()||a.classList.add("grp-weekend"),s.getTime()===e.getTime()&&a.classList.add("grp-today");const i=this.dateToYMD(s),o=`${s.getDate()}/${s.getMonth()+1}`;a.innerHTML=`\n                    <div class="grp-day-name">${s.toLocaleDateString("nl-NL",{weekday:"short"})}</div>\n                    <div class="grp-day-date">${o}</div>\n                `,console.log(`üóìÔ∏è HEADER[${r}]: Visual="${o}", ISO="${i}", DateObject="${s.toString()}", getDate="${s.getDate()}", getMonth="${s.getMonth()+1}"`),t.appendChild(a)}}catch(t){console.error("Error rendering days header:",t),this.emit("error",{type:"renderDaysHeader",error:t})}}renderResources(){try{const t=this.container.querySelector(".grp-resources-column");if(!t)throw new Error("Resources column element not found");t.innerHTML="",this.resources.forEach(((e,r)=>{if(!e||"string"!=typeof e.name)return void console.warn(`Invalid resource at index ${r}:`,e);const s=document.createElement("div");s.className="grp-resource-row",s.dataset.resourceIndex=r,s.textContent=e.name,t.appendChild(s)}))}catch(t){console.error("Error rendering resources:",t),this.emit("error",{type:"renderResources",error:t})}}renderTimeline(){try{const t=this.container.querySelector(".grp-timeline-grid");if(!t)throw new Error("Timeline grid element not found");t.innerHTML="",console.log("üî≤ TIMELINE DEBUG - currentStartDate:",this.dateToYMD(this.currentStartDate)),this.resources.forEach(((e,r)=>{const s=document.createElement("div");s.className="grp-timeline-row",s.dataset.resourceIndex=r;for(let t=0;t<this.options.daysToShow;t++){const e=new Date(this.currentStartDate.getTime()+24*t*60*60*1e3),a=document.createElement("div");a.className="grp-timeline-cell",a.dataset.resourceIndex=r,a.dataset.dayIndex=t,a.dataset.date=this.dateToYMD(e),0!==e.getDay()&&6!==e.getDay()||a.classList.add("grp-weekend");const i=new Date;i.setHours(0,0,0,0),e.getTime()===i.getTime()&&a.classList.add("grp-today"),0===r&&console.log(`üî≤ CELL[${t}]: dataset.date="${a.dataset.date}", ISO="${this.dateToYMD(e)}"`),a.addEventListener("click",(t=>this.handleCellClick(t))),a.addEventListener("dblclick",(t=>this.handleCellDoubleClick(t))),s.appendChild(a)}t.appendChild(s)}))}catch(t){console.error("Error rendering timeline:",t),this.emit("error",{type:"renderTimeline",error:t})}}renderTasks(){try{this.container.querySelectorAll(".grp-task").forEach((t=>t.remove())),this.tasks.forEach((t=>{try{this.addSingleTask(t)}catch(e){console.error(`Error rendering task ${t.id}:`,e,t)}})),this.emit("tasksRendered",this.tasks)}catch(t){console.error("Error rendering tasks:",t),this.emit("error",{type:"renderTasks",error:t})}}addSingleTask(t){try{if(!t)throw new Error("Task is required");const e=this.getTaskStartDayIndex(t);if(e<0||e>=this.options.daysToShow)return;const r=document.createElement("div");r.className="grp-task"+(t.type?` grp-${t.type}`:""),r.dataset.taskId=t.id,r.innerHTML=`\n                <span class="grp-task-text">${t.title||"Untitled"}</span>\n                <button class="grp-task-delete-btn" title="Verwijder taak">&times;</button>\n            `,r.title=`${t.title||"Untitled"} (${t.duration||1} dagen)`;const s=(t.duration||1)*this.options.cellWidth,a=e*this.options.cellWidth,i=(t.resourceIndex||0)*(this.options.rowHeight+1);r.style.cssText=`\n                width: ${s}px;\n                left: ${a}px;\n                top: ${i}px;\n            `,r.addEventListener("mousedown",(t=>this.startDrag(t)));const o=r.querySelector(".grp-task-delete-btn");o&&o.addEventListener("click",(e=>{e.stopPropagation(),this.deleteTask(t.id)})),r.addEventListener("click",(e=>{e.target.closest(".grp-task-delete-btn")||this.selectTask(t.id)})),r.addEventListener("dblclick",(e=>{e.target.closest(".grp-task-delete-btn")||this.handleTaskDoubleClick(t.id)}));const n=this.container.querySelector(".grp-timeline-area");if(!n)throw new Error("Timeline area not found");n.appendChild(r),console.log("üéØ ADD TASK DEBUG:",{id:t.id,title:t.title,taskStart:t.start,startDay:e,duration:t.duration,visualLeft:a,visualDay:Math.round(a/this.options.cellWidth),currentStartDate:this.dateToYMD(this.currentStartDate),shouldBeOnDay:`Visual day ${e} should show date ${this.dateToYMD(new Date(this.currentStartDate.getTime()+24*e*60*60*1e3))}`})}catch(e){console.error("Error adding single task:",e,t),this.emit("error",{type:"addSingleTask",error:e,task:t})}}getTaskStartDayIndex(t){try{if(!t||!t.start)throw new Error("Task must have a start date");const[e,r,s]=t.start.split("-").map(Number);if(isNaN(e)||isNaN(r)||isNaN(s))throw new Error("Invalid date format in task start");const a=new Date(e,r-1,s);a.setHours(0,0,0,0);const i=new Date(this.currentStartDate);i.setHours(0,0,0,0);const o=a.getTime()-i.getTime(),n=Math.round(o/864e5);return console.log("üìç getTaskStartDayIndex DEBUG:",{taskId:t.id,taskStart:t.start,taskDateLocal:a.toLocaleDateString("nl-NL"),startDateLocal:i.toLocaleDateString("nl-NL"),diffTime:o,diffDays:n,shouldBeVisualDay:n}),n}catch(e){return console.error("Error calculating task start day index:",e,t),-1}}getMonday(t){try{const e=new Date(t),r=e.getDay(),s=e.getDate()-r+(0===r?-6:1);return e.setDate(s),e.setHours(0,0,0,0),e}catch(t){return console.error("Error getting Monday:",t),new Date}}dateToYMD(t){try{if(!t||isNaN(t.getTime()))throw new Error("Invalid date object");const e=t.getFullYear(),r=(t.getMonth()+1).toString().padStart(2,"0");return`${e}-${r}-${t.getDate().toString().padStart(2,"0")}`}catch(t){return console.error("Error converting date to YMD:",t),"1970-01-01"}}calculateEndDate(t,e){try{if(!t||!this.isValidDate(t))throw new Error("Invalid start date");if(!e||e<1)throw new Error("Duration must be at least 1");const[r,s,a]=t.split("-").map(Number),i=new Date(r,s-1,a);i.setHours(0,0,0,0);const o=new Date(i.getTime()+24*(e-1)*60*60*1e3);return this.dateToYMD(o)}catch(e){return console.error("Error calculating end date:",e),t}}openTaskModal(t,e=null){try{if(e)this.editingTask=e,this.selectedCell=null;else{const e=t?t.target.closest(".grp-timeline-cell"):null;if(!e||t.target.closest(".grp-task"))return;this.selectedCell={resourceIndex:parseInt(e.dataset.resourceIndex),dayIndex:parseInt(e.dataset.dayIndex),date:e.dataset.date},this.editingTask=null}const r=document.getElementById("taskModal");if(!r)throw new Error("Task modal not found");const s=r.querySelector("h2"),a=document.getElementById("taskTitle"),i=document.getElementById("taskStart"),o=document.getElementById("taskDuration"),n=document.getElementById("taskResource"),l=document.getElementById("taskType");if(!(a&&i&&o&&n&&l))throw new Error("Modal form elements not found");0===n.options.length&&this.resources.forEach(((t,e)=>{const r=document.createElement("option");r.value=e,r.textContent=t.name,n.appendChild(r)})),e?(s&&(s.textContent="Taak Bewerken"),a.value=e.title||"",i.value=e.start||"",o.value=e.duration||1,n.value=e.resourceIndex||0,l.value=e.type||"project"):(s&&(s.textContent="Nieuwe Taak"),a.value="",i.value=this.selectedCell.date,o.value="1",n.value=this.selectedCell.resourceIndex,l.value="project"),r.style.display="block",a.focus()}catch(t){console.error("Error opening task modal:",t),this.emit("error",{type:"modalOpen",error:t})}}closeTaskModal(){try{const t=document.getElementById("taskModal");t&&(t.style.display="none"),this.selectedCell=null,this.editingTask=null}catch(t){console.error("Error closing task modal:",t),this.emit("error",{type:"modalClose",error:t})}}saveTask(t){try{t.preventDefault();const e=document.getElementById("taskTitle"),r=document.getElementById("taskStart"),s=document.getElementById("taskDuration"),a=document.getElementById("taskResource"),i=document.getElementById("taskType");if(!(e&&r&&s&&a&&i))throw new Error("Form elements not found");const o=e.value.trim(),n=r.value,l=parseInt(s.value),d=parseInt(a.value),c=i.value;if(!o)throw new Error("Task title is required");if(!n)throw new Error("Start date is required");if(isNaN(l)||l<1)throw new Error("Task duration must be at least 1 day");if(this.editingTask){const t={...this.editingTask};this.editingTask.title=o,this.editingTask.start=n,this.editingTask.duration=l,this.editingTask.resourceIndex=d,this.editingTask.type=c,this.editingTask.end=this.calculateEndDate(n,l);const e=this.container.querySelector(`[data-task-id="${this.editingTask.id}"]`);e&&e.remove(),this.addSingleTask(this.editingTask),this.emit("taskUpdated",{task:this.editingTask,oldTask:t})}else{const t={id:++this.currentTaskId,title:o,start:n,duration:l,resourceIndex:d,type:c};t.end=this.calculateEndDate(n,l),this.tasks.push(t),this.addSingleTask(t),this.emit("taskAdded",t)}this.closeTaskModal()}catch(t){console.error("Error saving task:",t),this.emit("error",{type:"taskSave",error:t}),alert(`Error saving task: ${t.message}`)}}startDrag(t){try{if(t.target.closest(".grp-task-delete-btn"))return;const e=t.target.closest(".grp-task");if(!e)throw new Error("Task element not found");const r=this.tasks.find((t=>t.id==e.dataset.taskId));if(!r)throw new Error("Task data not found");const s=e.getBoundingClientRect(),a=t.clientX-s.left,i=a<=8,o=a>=s.width-8;if(i||o)return void this.startResize(t,e,r,i?"left":"right");const n=parseInt(e.style.left)||0,l=Math.round(n/this.options.cellWidth);console.log("Starting drag (SIMPLE):",{taskId:r.id,currentLeft:n,currentStartDay:l,taskStart:r.start}),this.dragState={task:r,element:e,startX:t.clientX,startY:t.clientY,originalResourceIndex:r.resourceIndex,currentResourceIndex:r.resourceIndex,originalStartDay:l},e.classList.add("grp-dragging"),t.preventDefault(),this.emit("dragStart",{task:r,element:e})}catch(t){console.error("Error starting drag:",t),this.emit("error",{type:"dragStart",error:t})}}startResize(t,e,r,s){try{const a=parseInt(e.style.left)||0,i=parseInt(e.style.width)||0,o=Math.round(a/this.options.cellWidth),n=Math.round(i/this.options.cellWidth);this.resizeState={task:r,element:e,handle:s,startX:t.clientX,originalStartDay:o,originalDuration:n,originalLeft:a,originalWidth:i},e.classList.add("grp-resizing"),t.preventDefault(),this.emit("resizeStart",{task:r,handle:s,element:e})}catch(t){console.error("Error starting resize:",t),this.emit("error",{type:"resizeStart",error:t})}}handleMouseMove(t){try{if(this.resizeState)return void this.handleResizeMove(t);if(!this.dragState)return;const e=t.clientX-this.dragState.startX,r=t.clientY-this.dragState.startY,s=Math.round(e/this.options.cellWidth),a=Math.round(r/(this.options.rowHeight+1)),i=(this.dragState.originalStartDay+s)*this.options.cellWidth,o=(this.dragState.originalResourceIndex+a)*(this.options.rowHeight+1);this.dragState.element.style.left=i+"px",this.dragState.element.style.top=o+"px";const n=Math.max(0,Math.min(this.resources.length-1,this.dragState.originalResourceIndex+a));n!==this.dragState.currentResourceIndex&&(console.log("Moving task to new row:",{taskId:this.dragState.task.id,fromResource:this.dragState.currentResourceIndex,toResource:n}),this.dragState.currentResourceIndex=n),console.log("Drag move:",{taskId:this.dragState.task.id,deltaX:e,deltaY:r,cellsDeltaX:s,rowsDeltaY:a,newLeft:i,newTop:o})}catch(t){console.error("Error handling mouse move:",t),this.emit("error",{type:"mouseMove",error:t})}}handleResizeMove(t){try{const e=t.clientX-this.resizeState.startX,r=Math.round(e/this.options.cellWidth);let s=this.resizeState.originalLeft,a=this.resizeState.originalWidth,i=this.resizeState.originalStartDay,o=this.resizeState.originalDuration;if("left"===this.resizeState.handle){const t=this.resizeState.originalDuration-1,e=Math.max(-t,Math.min(r,this.resizeState.originalStartDay));s=this.resizeState.originalLeft+e*this.options.cellWidth,a=this.resizeState.originalWidth-e*this.options.cellWidth,i=this.resizeState.originalStartDay+e,o=this.resizeState.originalDuration-e}else{const t=this.options.daysToShow-this.resizeState.originalStartDay-1,e=Math.max(-(this.resizeState.originalDuration-1),Math.min(r,t));a=this.resizeState.originalWidth+e*this.options.cellWidth,o=this.resizeState.originalDuration+e}o<1&&(o=1,"left"===this.resizeState.handle&&(i=this.resizeState.originalStartDay+this.resizeState.originalDuration-1,s=i*this.options.cellWidth),a=this.options.cellWidth),this.resizeState.element.style.left=s+"px",this.resizeState.element.style.width=a+"px",this.resizeState.currentStartDay=i,this.resizeState.currentDuration=o}catch(t){console.error("Error handling resize move:",t),this.emit("error",{type:"resizeMove",error:t})}}handleMouseUp(t){try{if(this.resizeState)return void this.handleResizeEnd(t);if(!this.dragState)return;const e=t.clientX-this.dragState.startX,r=t.clientY-this.dragState.startY,s=Math.round(e/this.options.cellWidth),a=Math.round(r/(this.options.rowHeight+1)),i=Math.max(0,Math.min(this.options.daysToShow-this.dragState.task.duration,this.dragState.originalStartDay+s)),o=Math.max(0,Math.min(this.resources.length-1,this.dragState.originalResourceIndex+a)),n=new Date(this.currentStartDate.getTime()+24*i*60*60*1e3),l=new Date(n.getTime()+24*(this.dragState.task.duration-1)*60*60*1e3),d=this.dragState.task.start;this.dragState.task.start=this.dateToYMD(n),this.dragState.task.end=this.dateToYMD(l),this.dragState.task.resourceIndex=o,console.log("üèÉ DRAG COMPLETE DEBUG:",{taskId:this.dragState.task.id,oldStart:d,newStartDay:i,currentStartDate:this.dateToYMD(this.currentStartDate),calculatedNewStart:this.dateToYMD(n),finalTaskStart:this.dragState.task.start,visualPosition:`left: ${this.dragState.element.style.left}, which is day ${Math.round(parseInt(this.dragState.element.style.left)/this.options.cellWidth)}`,debugManualCalc:`Day ${i} from ${this.dateToYMD(this.currentStartDate)} should be: ${this.dateToYMD(new Date(this.currentStartDate.getTime()+24*i*60*60*1e3))}`,actualNewStartDate:n.toString()}),this.dragState.element.classList.remove("grp-dragging"),this.emit("taskMoved",{task:this.dragState.task,oldStart:d,newStart:this.dragState.task.start,oldResourceIndex:this.dragState.originalResourceIndex,newResourceIndex:o}),this.dragState=null}catch(t){console.error("Error handling mouse up:",t),this.emit("error",{type:"mouseUp",error:t}),this.dragState&&this.dragState.element&&this.dragState.element.classList.remove("grp-dragging"),this.dragState=null}}handleResizeEnd(t){try{const t=this.resizeState.task,e=this.resizeState.element,r=this.resizeState.handle,s=t.start,a=t.end,i=t.duration,o=this.resizeState.currentStartDay||this.resizeState.originalStartDay,n=this.resizeState.currentDuration||this.resizeState.originalDuration,l=new Date(this.currentStartDate.getTime()+24*o*60*60*1e3),d=new Date(l.getTime()+24*(n-1)*60*60*1e3);t.start=this.dateToYMD(l),t.end=this.dateToYMD(d),t.duration=n,console.log("Updated task after resize:",{id:t.id,handle:r,oldStart:s,oldEnd:a,oldDuration:i,newStart:t.start,newEnd:t.end,newDuration:t.duration}),e.classList.remove("grp-resizing"),this.emit("taskResized",{task:t,handle:r,oldStart:s,oldEnd:a,oldDuration:i,newStart:t.start,newEnd:t.end,newDuration:t.duration}),this.resizeState=null}catch(t){console.error("Error handling resize end:",t),this.emit("error",{type:"resizeEnd",error:t}),this.resizeState&&this.resizeState.element&&this.resizeState.element.classList.remove("grp-resizing"),this.resizeState=null}}handleKeyDown(t){try{const e="INPUT"===t.target.tagName||"TEXTAREA"===t.target.tagName||"SELECT"===t.target.tagName,r=document.getElementById("taskModal"),s=r&&"block"===r.style.display;if(e||s)return;"Delete"!==t.key&&"Backspace"!==t.key||!this.selectedTask||(t.preventDefault(),this.deleteTask(this.selectedTask)),"Escape"===t.key&&this.selectTask(null)}catch(t){console.error("Error handling keyboard event:",t),this.emit("error",{type:"keyboard",error:t})}}selectTask(t){try{if(this.container.querySelectorAll(".grp-task.grp-selected").forEach((t=>{t.classList.remove("grp-selected")})),this.selectedTask=t,t){const e=this.container.querySelector(`[data-task-id="${t}"]`);e&&(e.classList.add("grp-selected"),this.emit("taskSelected",this.getTask(t)))}else this.emit("taskDeselected")}catch(t){console.error("Error selecting task:",t),this.emit("error",{type:"taskSelect",error:t})}}deleteTask(t){try{const e=this.getTask(t);if(!e)return;if(!confirm(`Weet je zeker dat je "${e.title}" wilt verwijderen?`))return;this.selectedTask===t&&(this.selectedTask=null),this.removeTask(t)}catch(t){console.error("Error deleting task:",t),this.emit("error",{type:"taskDelete",error:t})}}editTask(t){try{const e=this.getTask(t);if(!e)return;this.editingTask=e,this.selectedCell=null,this.openTaskModal(null,e)}catch(t){console.error("Error editing task:",t),this.emit("error",{type:"taskEdit",error:t})}}addTask(t){try{this.validateTask(t);const e={id:t.id||++this.currentTaskId,title:t.title||"Untitled Task",duration:t.duration||1,resourceIndex:t.resourceIndex||0,start:t.start,end:t.end||this.calculateEndDate(t.start,t.duration||1),type:t.type||"project",...t};return this.tasks.push(e),this.addSingleTask(e),this.emit("taskAdded",e),e}catch(e){throw console.error("Error adding task:",e),this.emit("error",{type:"addTask",error:e,task:t}),e}}removeTask(t){try{const e=this.tasks.findIndex((e=>e.id===t));if(e>-1){const r=this.tasks[e];this.tasks.splice(e,1);const s=this.container.querySelector(`[data-task-id="${t}"]`);return s&&s.remove(),this.emit("taskRemoved",r),r}return null}catch(e){return console.error("Error removing task:",e),this.emit("error",{type:"removeTask",error:e,taskId:t}),null}}updateTask(t,e){try{if(!e||"object"!=typeof e)throw new Error("Updates must be an object");const r=this.tasks.find((e=>e.id===t));if(r){const s={...r};if(e.start&&!this.isValidDate(e.start))throw new Error("Invalid start date in updates");if(e.duration&&(!Number.isInteger(e.duration)||e.duration<1))throw new Error("Invalid duration in updates");Object.assign(r,e),(e.start||e.duration)&&(r.end=this.calculateEndDate(r.start,r.duration));const a=this.container.querySelector(`[data-task-id="${t}"]`);return a&&a.remove(),this.addSingleTask(r),this.emit("taskUpdated",{task:r,oldTask:s}),r}return null}catch(r){return console.error("Error updating task:",r),this.emit("error",{type:"updateTask",error:r,taskId:t,updates:e}),null}}getTask(t){try{return this.tasks.find((e=>e.id===t))||null}catch(t){return console.error("Error getting task:",t),null}}getTasksForResource(t){try{if(!Number.isInteger(t)||t<0)throw new Error("Resource index must be a non-negative integer");return this.tasks.filter((e=>e.resourceIndex===t))}catch(t){return console.error("Error getting tasks for resource:",t),[]}}getTasksForDate(t){try{const e="string"==typeof t?t:this.dateToYMD(t);if(!this.isValidDate(e))throw new Error("Invalid date provided");return this.tasks.filter((t=>e>=t.start&&e<=t.end))}catch(t){return console.error("Error getting tasks for date:",t),[]}}setDateRange(t,e){try{if(!t||isNaN(new Date(t).getTime()))throw new Error("Invalid start date");if(e&&(!Number.isInteger(e)||e<1))throw new Error("Days must be a positive integer");this.currentStartDate=this.getMonday(t),this.options.daysToShow=e||this.options.daysToShow,this.render(),this.emit("dateRangeChanged",{startDate:this.currentStartDate,endDate:new Date(this.currentStartDate.getTime()+24*(this.options.daysToShow-1)*60*60*1e3),days:this.options.daysToShow})}catch(t){console.error("Error setting date range:",t),this.emit("error",{type:"setDateRange",error:t})}}goToToday(){try{this.setDateRange(new Date,this.options.daysToShow)}catch(t){console.error("Error going to today:",t),this.emit("error",{type:"goToToday",error:t})}}goToNextWeek(){try{if(!this.options.infiniteScroll){const t=new Date(this.currentStartDate);t.setDate(t.getDate()+7);const e=new Date(this.loadedDateRange.end);if(e.setDate(e.getDate()-7),t>e)return console.warn("Cannot go to next week - infinite scroll disabled and reached end of loaded range"),void this.emit("navigationLimitReached",{direction:"next",reason:"infinite_scroll_disabled"})}const t=new Date(this.currentStartDate);t.setDate(t.getDate()+7),this.setDateRange(t,this.options.daysToShow)}catch(t){console.error("Error going to next week:",t),this.emit("error",{type:"goToNextWeek",error:t})}}goToPreviousWeek(){try{if(!this.options.infiniteScroll){const t=new Date(this.currentStartDate);if(t.setDate(t.getDate()-7),t<this.loadedDateRange.start)return console.warn("Cannot go to previous week - infinite scroll disabled and reached start of loaded range"),void this.emit("navigationLimitReached",{direction:"previous",reason:"infinite_scroll_disabled"})}const t=new Date(this.currentStartDate);t.setDate(t.getDate()-7),this.setDateRange(t,this.options.daysToShow)}catch(t){console.error("Error going to previous week:",t),this.emit("error",{type:"goToPreviousWeek",error:t})}}refresh(){try{this.render(),this.emit("refreshed")}catch(t){console.error("Error refreshing:",t),this.emit("error",{type:"refresh",error:t})}}destroy(){try{document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp),document.removeEventListener("keydown",this.handleKeyDown.bind(this));const t=this.container.querySelector(".grp-timeline-area");t&&t.removeEventListener("scroll",this.handleScroll);const e=document.getElementById("taskModal");e&&e.remove(),this.container.innerHTML="",this.dragState=null,this.resizeState=null,this.selectedCell=null,this.selectedTask=null,this.editingTask=null,this.events={},this.emit("destroyed")}catch(t){console.error("Error during destroy:",t),this.emit("error",{type:"destroy",error:t})}}handleScroll(t){try{console.log("üñ±Ô∏è Scroll event triggered!",t.target);const e=t.target,r=e.scrollLeft,s=e.scrollWidth,a=e.clientWidth;if(this.options.infiniteScroll){const t=(r+a)/s*100,e=r+a>=.9*s;console.log("Scroll debug:",{scrollLeft:r,scrollWidth:s,clientWidth:a,scrollPercentage:t.toFixed(1)+"%",shouldLoad:e,isLoading:this.isLoading,hasReachedEnd:this.hasReachedEnd,threshold90:.9*s,currentPosition:r+a})}!this.options.infiniteScroll||this.isLoading||this.hasReachedEnd||(r+a>=.9*s&&(console.log("üöÄ Triggering loadMoreDays()"),this.loadMoreDays()),this.cleanupOldDays())}catch(t){console.error("Error handling scroll:",t),this.emit("error",{type:"scroll",error:t})}}async loadMoreDays(){if(!this.isLoading&&!this.hasReachedEnd)try{this.isLoading=!0,console.log("Loading more days...");const t=this.container.querySelector(".grp-loading-indicator");t&&(t.style.display="block"),this.emit("loadingStart",{currentRange:{...this.loadedDateRange},requestedDays:this.options.chunkDays});const e=new Date(this.loadedDateRange.end);e.setDate(e.getDate()+this.options.chunkDays);const r=this.options.daysToShow;this.options.daysToShow+=this.options.chunkDays,this.loadedDateRange.end=e,this.renderDaysHeader(),this.renderTimeline(),this.renderTasks(),this.emit("dateRangeExtended",{oldEnd:new Date(this.loadedDateRange.end.getTime()-24*this.options.chunkDays*60*60*1e3),newEnd:this.loadedDateRange.end,newDays:this.options.chunkDays,totalDays:this.options.daysToShow}),console.log("Loaded more days:",{oldDaysToShow:r,newDaysToShow:this.options.daysToShow,newEndDate:this.loadedDateRange.end.toISOString().split("T")[0]})}catch(t){console.error("Error loading more days:",t),this.emit("loadingError",t)}finally{this.isLoading=!1;const t=this.container.querySelector(".grp-loading-indicator");t&&(t.style.display="none"),this.emit("loadingEnd",{currentRange:{...this.loadedDateRange},totalDays:this.options.daysToShow})}}cleanupOldDays(){try{if(this.options.daysToShow<=this.options.maxDaysInMemory)return;const t=this.container.querySelector(".grp-timeline-area");if(!t)return;const e=t.scrollLeft,r=Math.floor(e/this.options.cellWidth),s=Math.max(0,r-this.options.bufferDays);if(s>0){console.log("Cleaning up old days:",{totalDays:this.options.daysToShow,visibleStartDay:r,keepFromDay:s,daysToRemove:s}),this.currentStartDate.setDate(this.currentStartDate.getDate()+s),this.options.daysToShow-=s,this.loadedDateRange.start.setDate(this.loadedDateRange.start.getDate()+s);const a=new Date(this.currentStartDate);a.setDate(a.getDate()-1);const i=this.dateToYMD(a),o=this.tasks.filter((t=>t.end>=i)),n=this.tasks.filter((t=>t.end<i));this.tasks=o,this.renderDaysHeader(),this.renderTimeline(),this.renderTasks(),t.scrollLeft=e-s*this.options.cellWidth,this.emit("daysCleanedUp",{removedDays:s,removedTasks:n.length,currentRange:{...this.loadedDateRange},totalDays:this.options.daysToShow})}}catch(t){console.error("Error cleaning up old days:",t),this.emit("error",{type:"cleanupOldDays",error:t})}}getVisibleDateRange(){try{const t=this.container.querySelector(".grp-timeline-area");if(!t)throw new Error("Timeline area not found");const e=t.scrollLeft,r=t.clientWidth,s=Math.floor(e/this.options.cellWidth),a=Math.ceil((e+r)/this.options.cellWidth),i=new Date(this.currentStartDate);i.setDate(i.getDate()+s);const o=new Date(this.currentStartDate);return o.setDate(o.getDate()+a),{start:i,end:o,startDay:s,endDay:a}}catch(t){return console.error("Error getting visible date range:",t),this.emit("error",{type:"getVisibleDateRange",error:t}),null}}scrollToDate(t){try{const e=new Date(t);if(isNaN(e.getTime()))throw new Error("Invalid date provided");const r=e.getTime()-this.currentStartDate.getTime(),s=Math.floor(r/864e5);if(s<0||s>=this.options.daysToShow)return console.warn("Date outside of loaded range:",t),!1;const a=this.container.querySelector(".grp-timeline-area");if(!a)throw new Error("Timeline area not found");const i=s*this.options.cellWidth;return a.scrollLeft=i,this.emit("scrolledToDate",{date:e,scrollPosition:i,dayIndex:s}),!0}catch(t){return console.error("Error scrolling to date:",t),this.emit("error",{type:"scrollToDate",error:t}),!1}}handleCellClick(t){try{const e=t.target.closest(".grp-timeline-cell");if(!e||t.target.closest(".grp-task"))return;const r=parseInt(e.dataset.resourceIndex),s=parseInt(e.dataset.dayIndex);if(isNaN(r)||isNaN(s))throw new Error("Invalid cell data");const a={resourceIndex:r,dayIndex:s,date:e.dataset.date,resource:this.resources[r]};this.emit("cellClicked",a),this.options.useBuiltInModal&&"single"===this.options.cellClickAction&&this.openTaskModal(t)}catch(t){console.error("Error handling cell click:",t),this.emit("error",{type:"cellClick",error:t})}}handleCellDoubleClick(t){try{const e=t.target.closest(".grp-timeline-cell");if(!e||t.target.closest(".grp-task"))return;const r=parseInt(e.dataset.resourceIndex),s=parseInt(e.dataset.dayIndex);if(isNaN(r)||isNaN(s))throw new Error("Invalid cell data");const a={resourceIndex:r,dayIndex:s,date:e.dataset.date,resource:this.resources[r]};this.emit("cellDoubleClicked",a),this.options.useBuiltInModal&&"double"===this.options.cellClickAction&&this.openTaskModal(t)}catch(t){console.error("Error handling cell double click:",t),this.emit("error",{type:"cellDoubleClick",error:t})}}handleTaskDoubleClick(t){try{const e=this.getTask(t);if(!e)return;this.emit("taskDoubleClicked",e),this.options.useBuiltInModal&&this.editTask(t)}catch(t){console.error("Error handling task double click:",t),this.emit("error",{type:"taskDoubleClick",error:t})}}}"undefined"!=typeof module&&module.exports?module.exports=ResourceScheduler:"function"==typeof define&&define.amd?define([],(function(){return ResourceScheduler})):"undefined"!=typeof window&&(window.ResourceScheduler=ResourceScheduler);