class ResourceScheduler{constructor(t,e={}){if(this.container="string"==typeof t?document.querySelector(t):t,!this.container)throw new Error("Container element not found");this.options={cellWidth:80,rowHeight:50,daysToShow:21,startDate:new Date,useBuiltInModal:!0,cellClickAction:"single",infiniteScroll:!0,loadThreshold:7,bufferDays:14,maxDaysInMemory:84,chunkDays:21,...e},this.resources=[],this.tasks=[],this.currentTaskId=0,this.dragState=null,this.resizeState=null,this.selectedCell=null,this.selectedTask=null,this.editingTask=null,this.events={},this.loadedDateRange={start:null,end:null},this.isLoading=!1,this.hasReachedEnd=!1,this.currentStartDate=this.getMonday(this.options.startDate),this.options.infiniteScroll&&(this.loadedDateRange.start=new Date(this.currentStartDate),this.loadedDateRange.end=new Date(this.currentStartDate),this.loadedDateRange.end.setDate(this.loadedDateRange.end.getDate()+this.options.daysToShow-1)),this.handleMouseMove=this.handleMouseMove.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this),this.handleScroll=this.handleScroll.bind(this),this.init()}loadData(t,e){this.resources=t||[],this.tasks=e||[],this.currentTaskId=Math.max(0,...this.tasks.map((t=>t.id||0))),this.render()}getData(){return{resources:[...this.resources],tasks:[...this.tasks]}}on(t,e){return this.events[t]||(this.events[t]=[]),this.events[t].push(e),this}emit(t,e){this.events[t]&&this.events[t].forEach((t=>t(e)))}init(){this.createHTML(),this.setupEventListeners()}createHTML(){this.container.innerHTML=`\n            <div class="scheduler-container">\n                <div class="scheduler-header">\n                    <div class="resource-header">Resources</div>\n                    <div class="days-header-container">\n                        <div class="days-header"></div>\n                    </div>\n                </div>\n                <div class="scheduler-content">\n                    <div class="resources-column"></div>\n                    <div class="timeline-area">\n                        <div class="timeline-grid"></div>\n                        ${this.options.infiniteScroll?'<div class="loading-indicator" style="display: none;">Loading more dates...</div>':""}\n                    </div>\n                </div>\n            </div>\n            \n            ${this.options.useBuiltInModal?'\n            \x3c!-- Task Modal --\x3e\n            <div id="taskModal" class="modal">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <span class="close">&times;</span>\n                        <h2>Nieuwe Taak</h2>\n                    </div>\n                    <form id="taskForm">\n                        <div class="modal-body">\n                            <div class="form-group">\n                                <label for="taskTitle">Titel:</label>\n                                <input type="text" id="taskTitle" required>\n                            </div>\n                            <div class="form-group">\n                                <label for="taskDuration">Duur (dagen):</label>\n                                <input type="number" id="taskDuration" value="1" min="1" required>\n                            </div>\n                            <div class="form-group">\n                                <label for="taskType">Type:</label>\n                                <select id="taskType">\n                                    <option value="project">Project</option>\n                                    <option value="meeting">Meeting</option>\n                                    <option value="vacation">Vakantie</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" onclick="scheduler.closeTaskModal()">Annuleren</button>\n                            <button type="submit" class="btn btn-primary">Opslaan</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            ':""}\n        `}setupEventListeners(){if(this.options.useBuiltInModal){const t=document.getElementById("taskModal"),e=t.querySelector(".close"),s=document.getElementById("taskForm");e.onclick=()=>this.closeTaskModal(),window.onclick=e=>{e.target===t&&this.closeTaskModal()},s.onsubmit=t=>this.saveTask(t)}document.addEventListener("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp),document.addEventListener("keydown",this.handleKeyDown.bind(this)),this.syncScroll();const t=this.container.querySelector(".timeline-area");console.log("üîß Adding scroll listener to timeline-area:",t),t&&(t.addEventListener("scroll",this.handleScroll,{passive:!0}),setTimeout((()=>{console.log("üìä Timeline-area scroll info:",{scrollWidth:t.scrollWidth,clientWidth:t.clientWidth,scrollHeight:t.scrollHeight,clientHeight:t.clientHeight,canScrollHorizontal:t.scrollWidth>t.clientWidth,canScrollVertical:t.scrollHeight>t.clientHeight})}),100))}syncScroll(){const t=this.container.querySelector(".days-header-container"),e=this.container.querySelector(".timeline-area");console.log("üîó Setting up scroll sync between:",{daysHeaderContainer:t,timelineArea:e}),t&&e?e.addEventListener("scroll",(()=>{t.scrollLeft=e.scrollLeft,console.log("üìú Syncing scroll:",e.scrollLeft)})):console.warn("Could not find elements for scroll sync:",{daysHeaderContainer:t,timelineArea:e})}render(){this.renderDaysHeader(),this.renderResources(),this.renderTimeline(),this.renderTasks()}renderDaysHeader(){const t=this.container.querySelector(".days-header");t.innerHTML="";const e=new Date;e.setHours(0,0,0,0),console.log("üóìÔ∏è HEADER DEBUG - currentStartDate:",this.dateToYMD(this.currentStartDate));for(let s=0;s<this.options.daysToShow;s++){const a=new Date(this.currentStartDate.getTime()+24*s*60*60*1e3),i=document.createElement("div");i.className="day-column",0!==a.getDay()&&6!==a.getDay()||i.classList.add("weekend"),a.getTime()===e.getTime()&&i.classList.add("today");const n=this.dateToYMD(a),o=`${a.getDate()}/${a.getMonth()+1}`;i.innerHTML=`\n                <div class="day-name">${a.toLocaleDateString("nl-NL",{weekday:"short"})}</div>\n                <div class="day-date">${o}</div>\n            `,console.log(`üóìÔ∏è HEADER[${s}]: Visual="${o}", ISO="${n}", DateObject="${a.toString()}", getDate="${a.getDate()}", getMonth="${a.getMonth()+1}"`),t.appendChild(i)}}renderResources(){const t=this.container.querySelector(".resources-column");t.innerHTML="",this.resources.forEach(((e,s)=>{const a=document.createElement("div");a.className="resource-row",a.dataset.resourceIndex=s,a.textContent=e.name,t.appendChild(a)}))}renderTimeline(){const t=this.container.querySelector(".timeline-grid");t.innerHTML="",console.log("üî≤ TIMELINE DEBUG - currentStartDate:",this.dateToYMD(this.currentStartDate)),this.resources.forEach(((e,s)=>{const a=document.createElement("div");a.className="timeline-row",a.dataset.resourceIndex=s;for(let t=0;t<this.options.daysToShow;t++){const e=new Date(this.currentStartDate.getTime()+24*t*60*60*1e3),i=document.createElement("div");i.className="timeline-cell",i.dataset.resourceIndex=s,i.dataset.dayIndex=t,i.dataset.date=this.dateToYMD(e),0!==e.getDay()&&6!==e.getDay()||i.classList.add("weekend");const n=new Date;n.setHours(0,0,0,0),e.getTime()===n.getTime()&&i.classList.add("today"),0===s&&console.log(`üî≤ CELL[${t}]: dataset.date="${i.dataset.date}", ISO="${this.dateToYMD(e)}"`),i.addEventListener("click",(t=>this.handleCellClick(t))),i.addEventListener("dblclick",(t=>this.handleCellDoubleClick(t))),a.appendChild(i)}t.appendChild(a)}))}renderTasks(){this.container.querySelectorAll(".task").forEach((t=>t.remove())),this.tasks.forEach((t=>this.addSingleTask(t))),this.emit("tasksRendered",this.tasks)}addSingleTask(t){const e=this.getTaskStartDayIndex(t);if(e<0||e>=this.options.daysToShow)return;const s=document.createElement("div");s.className=`task ${t.type||"project"}`,s.dataset.taskId=t.id,s.innerHTML=`\n            <span class="task-text">${t.title}</span>\n            <button class="task-delete-btn" title="Verwijder taak">&times;</button>\n        `,s.title=`${t.title} (${t.duration} dagen)`;const a=(t.duration||1)*this.options.cellWidth,i=e*this.options.cellWidth,n=(t.resourceIndex||0)*(this.options.rowHeight+1);s.style.cssText=`\n            width: ${a}px;\n            left: ${i}px;\n            top: ${n}px;\n        `,s.addEventListener("mousedown",(t=>this.startDrag(t)));s.querySelector(".task-delete-btn").addEventListener("click",(e=>{e.stopPropagation(),this.deleteTask(t.id)})),s.addEventListener("click",(e=>{e.target.closest(".task-delete-btn")||this.selectTask(t.id)})),s.addEventListener("dblclick",(e=>{e.target.closest(".task-delete-btn")||this.handleTaskDoubleClick(t.id)}));this.container.querySelector(".timeline-area").appendChild(s),console.log("üéØ ADD TASK DEBUG:",{id:t.id,title:t.title,taskStart:t.start,startDay:e,duration:t.duration,visualLeft:i,visualDay:Math.round(i/this.options.cellWidth),currentStartDate:this.dateToYMD(this.currentStartDate),shouldBeOnDay:`Visual day ${e} should show date ${this.dateToYMD(new Date(this.currentStartDate.getTime()+24*e*60*60*1e3))}`})}getTaskStartDayIndex(t){const[e,s,a]=t.start.split("-").map(Number),i=new Date(e,s-1,a);i.setHours(0,0,0,0);const n=new Date(this.currentStartDate);n.setHours(0,0,0,0);const o=i.getTime()-n.getTime(),r=Math.round(o/864e5);return console.log("üìç getTaskStartDayIndex DEBUG:",{taskId:t.id,taskStart:t.start,taskDateLocal:i.toLocaleDateString("nl-NL"),startDateLocal:n.toLocaleDateString("nl-NL"),diffTime:o,diffDays:r,shouldBeVisualDay:r}),r}getMonday(t){const e=new Date(t),s=e.getDay(),a=e.getDate()-s+(0===s?-6:1);return e.setDate(a),e.setHours(0,0,0,0),e}dateToYMD(t){return`${t.getFullYear()}-${(t.getMonth()+1).toString().padStart(2,"0")}-${t.getDate().toString().padStart(2,"0")}`}calculateEndDate(t,e){const[s,a,i]=t.split("-").map(Number),n=new Date(s,a-1,i);n.setHours(0,0,0,0);const o=new Date(n.getTime()+24*(e-1)*60*60*1e3);return this.dateToYMD(o)}openTaskModal(t,e=null){if(e)this.editingTask=e,this.selectedCell=null;else{const e=t.target.closest(".timeline-cell");if(!e||t.target.closest(".task"))return;this.selectedCell={resourceIndex:parseInt(e.dataset.resourceIndex),dayIndex:parseInt(e.dataset.dayIndex),date:e.dataset.date},this.editingTask=null}const s=document.getElementById("taskModal"),a=s.querySelector("h2");e?(a.textContent="Taak Bewerken",document.getElementById("taskTitle").value=e.title,document.getElementById("taskDuration").value=e.duration,document.getElementById("taskType").value=e.type||"project"):(a.textContent="Nieuwe Taak",document.getElementById("taskTitle").value="",document.getElementById("taskDuration").value="1",document.getElementById("taskType").value="project"),s.style.display="block",document.getElementById("taskTitle").focus()}closeTaskModal(){document.getElementById("taskModal").style.display="none",this.selectedCell=null,this.editingTask=null}saveTask(t){t.preventDefault();const e=document.getElementById("taskTitle").value.trim(),s=parseInt(document.getElementById("taskDuration").value),a=document.getElementById("taskType").value;if(e){if(this.editingTask){const t={...this.editingTask};this.editingTask.title=e,this.editingTask.duration=s,this.editingTask.type=a,this.editingTask.end=this.calculateEndDate(this.editingTask.start,s);const i=this.container.querySelector(`[data-task-id="${this.editingTask.id}"]`);i&&i.remove(),this.addSingleTask(this.editingTask),this.emit("taskUpdated",{task:this.editingTask,oldTask:t})}else if(this.selectedCell){const t=this.selectedCell.date,i={id:++this.currentTaskId,title:e,duration:s,resourceIndex:this.selectedCell.resourceIndex,start:t,end:this.calculateEndDate(t,s),type:a};this.tasks.push(i),this.addSingleTask(i),this.emit("taskAdded",i)}this.closeTaskModal()}}startDrag(t){if(t.target.closest(".task-delete-btn"))return;const e=t.target.closest(".task"),s=this.tasks.find((t=>t.id==e.dataset.taskId));if(!s)return;const a=e.getBoundingClientRect(),i=t.clientX-a.left,n=i<=8,o=i>=a.width-8;if(n||o)return void this.startResize(t,e,s,n?"left":"right");const r=parseInt(e.style.left)||0,d=Math.round(r/this.options.cellWidth);console.log("Starting drag (SIMPLE):",{taskId:s.id,currentLeft:r,currentStartDay:d,taskStart:s.start}),this.dragState={task:s,element:e,startX:t.clientX,startY:t.clientY,originalResourceIndex:s.resourceIndex,currentResourceIndex:s.resourceIndex,originalStartDay:d},e.classList.add("dragging"),t.preventDefault(),this.emit("dragStart",{task:s,element:e})}startResize(t,e,s,a){const i=parseInt(e.style.left)||0,n=parseInt(e.style.width)||0,o=Math.round(i/this.options.cellWidth),r=Math.round(n/this.options.cellWidth);this.resizeState={task:s,element:e,handle:a,startX:t.clientX,originalStartDay:o,originalDuration:r,originalLeft:i,originalWidth:n},e.classList.add("resizing"),t.preventDefault(),this.emit("resizeStart",{task:s,handle:a,element:e})}handleMouseMove(t){if(this.resizeState)return void this.handleResizeMove(t);if(!this.dragState)return;const e=t.clientX-this.dragState.startX,s=t.clientY-this.dragState.startY,a=Math.round(e/this.options.cellWidth),i=Math.round(s/(this.options.rowHeight+1)),n=(this.dragState.originalStartDay+a)*this.options.cellWidth,o=(this.dragState.originalResourceIndex+i)*(this.options.rowHeight+1);this.dragState.element.style.left=n+"px",this.dragState.element.style.top=o+"px";const r=Math.max(0,Math.min(this.resources.length-1,this.dragState.originalResourceIndex+i));r!==this.dragState.currentResourceIndex&&(console.log("Moving task to new row:",{taskId:this.dragState.task.id,fromResource:this.dragState.currentResourceIndex,toResource:r}),this.dragState.currentResourceIndex=r),console.log("Drag move:",{taskId:this.dragState.task.id,deltaX:e,deltaY:s,cellsDeltaX:a,rowsDeltaY:i,newLeft:n,newTop:o})}handleResizeMove(t){const e=t.clientX-this.resizeState.startX,s=Math.round(e/this.options.cellWidth);let a=this.resizeState.originalLeft,i=this.resizeState.originalWidth,n=this.resizeState.originalStartDay,o=this.resizeState.originalDuration;if("left"===this.resizeState.handle){const t=this.resizeState.originalDuration-1,e=Math.max(-t,Math.min(s,this.resizeState.originalStartDay));a=this.resizeState.originalLeft+e*this.options.cellWidth,i=this.resizeState.originalWidth-e*this.options.cellWidth,n=this.resizeState.originalStartDay+e,o=this.resizeState.originalDuration-e}else{const t=this.options.daysToShow-this.resizeState.originalStartDay-1,e=Math.max(-(this.resizeState.originalDuration-1),Math.min(s,t));i=this.resizeState.originalWidth+e*this.options.cellWidth,o=this.resizeState.originalDuration+e}o<1&&(o=1,"left"===this.resizeState.handle&&(n=this.resizeState.originalStartDay+this.resizeState.originalDuration-1,a=n*this.options.cellWidth),i=this.options.cellWidth),this.resizeState.element.style.left=a+"px",this.resizeState.element.style.width=i+"px",this.resizeState.currentStartDay=n,this.resizeState.currentDuration=o}handleMouseUp(t){if(this.resizeState)return void this.handleResizeEnd(t);if(!this.dragState)return;const e=t.clientX-this.dragState.startX,s=t.clientY-this.dragState.startY,a=Math.round(e/this.options.cellWidth),i=Math.round(s/(this.options.rowHeight+1)),n=Math.max(0,Math.min(this.options.daysToShow-this.dragState.task.duration,this.dragState.originalStartDay+a)),o=Math.max(0,Math.min(this.resources.length-1,this.dragState.originalResourceIndex+i)),r=new Date(this.currentStartDate.getTime()+24*n*60*60*1e3),d=new Date(r.getTime()+24*(this.dragState.task.duration-1)*60*60*1e3),l=this.dragState.task.start;this.dragState.task.start=this.dateToYMD(r),this.dragState.task.end=this.dateToYMD(d),this.dragState.task.resourceIndex=o,console.log("üèÉ DRAG COMPLETE DEBUG:",{taskId:this.dragState.task.id,oldStart:l,newStartDay:n,currentStartDate:this.dateToYMD(this.currentStartDate),calculatedNewStart:this.dateToYMD(r),finalTaskStart:this.dragState.task.start,visualPosition:`left: ${this.dragState.element.style.left}, which is day ${Math.round(parseInt(this.dragState.element.style.left)/this.options.cellWidth)}`,debugManualCalc:`Day ${n} from ${this.dateToYMD(this.currentStartDate)} should be: ${this.dateToYMD(new Date(this.currentStartDate.getTime()+24*n*60*60*1e3))}`,actualNewStartDate:r.toString()}),this.dragState.element.classList.remove("dragging"),this.emit("taskMoved",{task:this.dragState.task,oldStart:l,newStart:this.dragState.task.start,oldResourceIndex:this.dragState.originalResourceIndex,newResourceIndex:o}),this.dragState=null}handleResizeEnd(t){const e=this.resizeState.task,s=this.resizeState.element,a=this.resizeState.handle,i=e.start,n=e.end,o=e.duration,r=this.resizeState.currentStartDay||this.resizeState.originalStartDay,d=this.resizeState.currentDuration||this.resizeState.originalDuration,l=new Date(this.currentStartDate.getTime()+24*r*60*60*1e3),h=new Date(l.getTime()+24*(d-1)*60*60*1e3);e.start=this.dateToYMD(l),e.end=this.dateToYMD(h),e.duration=d,console.log("Updated task after resize:",{id:e.id,handle:a,oldStart:i,oldEnd:n,oldDuration:o,newStart:e.start,newEnd:e.end,newDuration:e.duration}),s.classList.remove("resizing"),this.emit("taskResized",{task:e,handle:a,oldStart:i,oldEnd:n,oldDuration:o,newStart:e.start,newEnd:e.end,newDuration:e.duration}),this.resizeState=null}handleKeyDown(t){const e="INPUT"===t.target.tagName||"TEXTAREA"===t.target.tagName||"SELECT"===t.target.tagName,s="block"===document.getElementById("taskModal").style.display;e||s||("Delete"!==t.key&&"Backspace"!==t.key||!this.selectedTask||(t.preventDefault(),this.deleteTask(this.selectedTask)),"Escape"===t.key&&this.selectTask(null))}selectTask(t){if(this.container.querySelectorAll(".task.selected").forEach((t=>{t.classList.remove("selected")})),this.selectedTask=t,t){const e=this.container.querySelector(`[data-task-id="${t}"]`);e&&(e.classList.add("selected"),this.emit("taskSelected",this.getTask(t)))}else this.emit("taskDeselected")}deleteTask(t){const e=this.getTask(t);if(!e)return;confirm(`Weet je zeker dat je "${e.title}" wilt verwijderen?`)&&(this.selectedTask===t&&(this.selectedTask=null),this.removeTask(t))}editTask(t){const e=this.getTask(t);e&&(this.editingTask=e,this.selectedCell=null,this.openTaskModal(null,e))}addTask(t){const e={id:t.id||++this.currentTaskId,title:t.title||"Untitled Task",duration:t.duration||1,resourceIndex:t.resourceIndex||0,start:t.start,end:t.end||this.calculateEndDate(t.start,t.duration||1),type:t.type||"project",...t};return this.tasks.push(e),this.addSingleTask(e),this.emit("taskAdded",e),e}removeTask(t){const e=this.tasks.findIndex((e=>e.id===t));if(e>-1){const s=this.tasks[e];this.tasks.splice(e,1);const a=this.container.querySelector(`[data-task-id="${t}"]`);return a&&a.remove(),this.emit("taskRemoved",s),s}return null}updateTask(t,e){const s=this.tasks.find((e=>e.id===t));if(s){const a={...s};Object.assign(s,e),(e.start||e.duration)&&(s.end=this.calculateEndDate(s.start,s.duration));const i=this.container.querySelector(`[data-task-id="${t}"]`);return i&&i.remove(),this.addSingleTask(s),this.emit("taskUpdated",{task:s,oldTask:a}),s}return null}getTask(t){return this.tasks.find((e=>e.id===t))||null}getTasksForResource(t){return this.tasks.filter((e=>e.resourceIndex===t))}getTasksForDate(t){const e="string"==typeof t?t:this.dateToYMD(t);return this.tasks.filter((t=>e>=t.start&&e<=t.end))}setDateRange(t,e){this.currentStartDate=this.getMonday(t),this.options.daysToShow=e||this.options.daysToShow,this.render(),this.emit("dateRangeChanged",{startDate:this.currentStartDate,endDate:new Date(this.currentStartDate.getTime()+24*(this.options.daysToShow-1)*60*60*1e3),days:this.options.daysToShow})}goToToday(){this.setDateRange(new Date,this.options.daysToShow)}goToNextWeek(){if(!this.options.infiniteScroll){const t=new Date(this.currentStartDate);t.setDate(t.getDate()+7);const e=new Date(this.loadedDateRange.end);if(e.setDate(e.getDate()-7),t>e)return console.warn("Cannot go to next week - infinite scroll disabled and reached end of loaded range"),void this.emit("navigationLimitReached",{direction:"next",reason:"infinite_scroll_disabled"})}const t=new Date(this.currentStartDate);t.setDate(t.getDate()+7),this.setDateRange(t,this.options.daysToShow)}goToPreviousWeek(){if(!this.options.infiniteScroll){const t=new Date(this.currentStartDate);if(t.setDate(t.getDate()-7),t<this.loadedDateRange.start)return console.warn("Cannot go to previous week - infinite scroll disabled and reached start of loaded range"),void this.emit("navigationLimitReached",{direction:"previous",reason:"infinite_scroll_disabled"})}const t=new Date(this.currentStartDate);t.setDate(t.getDate()-7),this.setDateRange(t,this.options.daysToShow)}refresh(){this.render(),this.emit("refreshed")}destroy(){document.removeEventListener("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp),document.removeEventListener("keydown",this.handleKeyDown.bind(this)),this.container.removeEventListener("scroll",this.handleScroll);const t=document.getElementById("taskModal");t&&t.remove(),this.container.innerHTML="",this.dragState=null,this.resizeState=null,this.selectedCell=null,this.selectedTask=null,this.editingTask=null,this.events={},this.emit("destroyed")}handleScroll(t){console.log("üñ±Ô∏è Scroll event triggered!",t.target);const e=t.target,s=e.scrollLeft,a=e.scrollWidth,i=e.clientWidth;if(this.options.infiniteScroll){const t=(s+i)/a*100,e=s+i>=.9*a;console.log("Scroll debug:",{scrollLeft:s,scrollWidth:a,clientWidth:i,scrollPercentage:t.toFixed(1)+"%",shouldLoad:e,isLoading:this.isLoading,hasReachedEnd:this.hasReachedEnd,threshold90:.9*a,currentPosition:s+i})}!this.options.infiniteScroll||this.isLoading||this.hasReachedEnd||(s+i>=.9*a&&(console.log("üöÄ Triggering loadMoreDays()"),this.loadMoreDays()),this.cleanupOldDays())}async loadMoreDays(){if(this.isLoading||this.hasReachedEnd)return;this.isLoading=!0,console.log("Loading more days...");const t=this.container.querySelector(".loading-indicator");t&&(t.style.display="block"),this.emit("loadingStart",{currentRange:{...this.loadedDateRange},requestedDays:this.options.chunkDays});try{const t=new Date(this.loadedDateRange.end);t.setDate(t.getDate()+this.options.chunkDays);const e=this.options.daysToShow;this.options.daysToShow+=this.options.chunkDays,this.loadedDateRange.end=t,this.renderDaysHeader(),this.renderTimeline(),this.renderTasks(),this.emit("dateRangeExtended",{oldEnd:new Date(this.loadedDateRange.end.getTime()-24*this.options.chunkDays*60*60*1e3),newEnd:this.loadedDateRange.end,newDays:this.options.chunkDays,totalDays:this.options.daysToShow}),console.log("Loaded more days:",{oldDaysToShow:e,newDaysToShow:this.options.daysToShow,newEndDate:this.loadedDateRange.end.toISOString().split("T")[0]})}catch(t){console.error("Error loading more days:",t),this.emit("loadingError",t)}finally{this.isLoading=!1,t&&(t.style.display="none"),this.emit("loadingEnd",{currentRange:{...this.loadedDateRange},totalDays:this.options.daysToShow})}}cleanupOldDays(){if(this.options.daysToShow<=this.options.maxDaysInMemory)return;const t=this.container.scrollLeft,e=Math.floor(t/this.options.cellWidth),s=Math.max(0,e-this.options.bufferDays);if(s>0){console.log("Cleaning up old days:",{totalDays:this.options.daysToShow,visibleStartDay:e,keepFromDay:s,daysToRemove:s}),this.currentStartDate.setDate(this.currentStartDate.getDate()+s),this.options.daysToShow-=s,this.loadedDateRange.start.setDate(this.loadedDateRange.start.getDate()+s);const a=new Date(this.currentStartDate);a.setDate(a.getDate()-1);const i=this.dateToYMD(a),n=this.tasks.filter((t=>t.end>=i)),o=this.tasks.filter((t=>t.end<i));this.tasks=n,this.renderDaysHeader(),this.renderTimeline(),this.renderTasks(),this.container.scrollLeft=t-s*this.options.cellWidth,this.emit("daysCleanedUp",{removedDays:s,removedTasks:o.length,currentRange:{...this.loadedDateRange},totalDays:this.options.daysToShow})}}getVisibleDateRange(){const t=this.container.scrollLeft,e=this.container.clientWidth,s=Math.floor(t/this.options.cellWidth),a=Math.ceil((t+e)/this.options.cellWidth),i=new Date(this.currentStartDate);i.setDate(i.getDate()+s);const n=new Date(this.currentStartDate);return n.setDate(n.getDate()+a),{start:i,end:n,startDay:s,endDay:a}}scrollToDate(t){const e=new Date(t),s=e.getTime()-this.currentStartDate.getTime(),a=Math.floor(s/864e5);if(a<0||a>=this.options.daysToShow)return console.warn("Date outside of loaded range:",t),!1;const i=a*this.options.cellWidth;return this.container.scrollLeft=i,this.emit("scrolledToDate",{date:e,scrollPosition:i,dayIndex:a}),!0}handleCellClick(t){const e=t.target.closest(".timeline-cell");if(!e||t.target.closest(".task"))return;const s={resourceIndex:parseInt(e.dataset.resourceIndex),dayIndex:parseInt(e.dataset.dayIndex),date:e.dataset.date,resource:this.resources[parseInt(e.dataset.resourceIndex)]};this.emit("cellClicked",s),this.options.useBuiltInModal&&"single"===this.options.cellClickAction&&this.openTaskModal(t)}handleCellDoubleClick(t){const e=t.target.closest(".timeline-cell");if(!e||t.target.closest(".task"))return;const s={resourceIndex:parseInt(e.dataset.resourceIndex),dayIndex:parseInt(e.dataset.dayIndex),date:e.dataset.date,resource:this.resources[parseInt(e.dataset.resourceIndex)]};this.emit("cellDoubleClicked",s),this.options.useBuiltInModal&&"double"===this.options.cellClickAction&&this.openTaskModal(t)}handleTaskDoubleClick(t){const e=this.getTask(t);e&&(this.emit("taskDoubleClicked",e),this.options.useBuiltInModal&&this.editTask(t))}}"undefined"!=typeof module&&module.exports?module.exports=ResourceScheduler:"function"==typeof define&&define.amd?define([],(function(){return ResourceScheduler})):"undefined"!=typeof window&&(window.ResourceScheduler=ResourceScheduler);